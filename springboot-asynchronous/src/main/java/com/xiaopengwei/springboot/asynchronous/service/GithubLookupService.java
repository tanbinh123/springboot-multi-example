package com.xiaopengwei.springboot.asynchronous.service;import com.xiaopengwei.springboot.asynchronous.entity.User;import java.util.concurrent.Future;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.boot.web.client.RestTemplateBuilder;import org.springframework.scheduling.annotation.Async;import org.springframework.scheduling.annotation.AsyncResult;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;/** * <p> * 业务逻辑 * </p> * * @author github.com/xpwi * @since 2019-04-20 */@Servicepublic class GithubLookupService {    private static final Logger logger = LoggerFactory.getLogger(GithubLookupService.class);    private final RestTemplate restTemplate;    public GithubLookupService(RestTemplateBuilder restTemplateBuilder) {        this.restTemplate = restTemplateBuilder.build();    }    @Async    public Future<User> findUser(String user) throws InterruptedException {        logger.info("Looking up " + user);        String url = String.format("https://api.github.com/users/%s", user);        User results = restTemplate.getForObject(url, User.class);        // Artificial delay of 1s for demonstration purposes        Thread.sleep(1000L);        return new AsyncResult<>(results);    }}