<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE generatorConfiguration        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"><!--提示：如果修改本文件名，需在 pom 中配置--><!--本项目为整合项目，如果使用 MyBatis Generator 搞不定，--><!--可以克隆单独地址：https://github.com/xpwi/springboot-mybatis--><!--MyBatis Generator 执行方式：--><!--（1）使用命令--><!--mvn mybatis-generator:generate--><!--（2）使用工具--><!--IDEA > Add Configuration > + > Maven > Command Lines > mybatis-generator:generate > 运行--><!--（3）使用工具类执行--><!--https://github.com/xpwi/spring-springmvc-mybatis/tree/master/src/main/java/com/xiaopengwei/ssm/util--><generatorConfiguration>    <!-- context 是逆向工程的主要配置信息 -->    <!-- id：起个名字 -->    <!-- targetRuntime：设置生成的文件适用于那个 mybatis 版本 -->    <context id="default" targetRuntime="MyBatis3">        <!--jdbc的数据库连接-->        <!--这里是以变量的形式定义，具体的值在 application.properties 文件中-->        <!--jdbc:mysql://localhost:3306/xpw-test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC-->        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"                        connectionURL="jdbc:mysql://127.0.0.1:3306/xpw-test?serverTimezone=UTC"                        userId="root"                        password="root">        </jdbcConnection>        <!--不自动转换成 BigDecimal 类型-->        <javaTypeResolver>            <property name="forceBigDecimals" value="false"/>        </javaTypeResolver>        <!-- targetPackage：生成的实体类所在的包 -->        <!-- targetProject：生成的实体类所在的硬盘位置 -->        <!-- DataObject 类存放位置 -->        <javaModelGenerator targetPackage="com.xiaopengwei.springboot.com.xiaopengwei.springboot.swagger.controller.entity"                            targetProject=".\src\main\java">            <!-- 是否允许子包 -->            <property name="enableSubPackages" value="false"/>            <!-- 是否对modal添加构造函数 -->            <property name="constructorBased" value="true"/>            <!-- 是否清理从数据库中查询出的字符串左右两边的空白字符 -->            <property name="trimStrings" value="true"/>        </javaModelGenerator>        <!-- targetPackage 和 targetProject：生成的 repository 文件的包和位置 -->        <sqlMapGenerator targetPackage="mapper"                         targetProject=".\src\main\resources">            <!-- 针对数据库的一个配置，是否把 schema 作为字包名 -->            <property name="enableSubPackages" value="false"/>        </sqlMapGenerator>        <!-- targetPackage 和 targetProject：生成的 interface 文件的包和位置 -->        <javaClientGenerator type="XMLMAPPER"                             targetPackage="com.xiaopengwei.springboot.com.xiaopengwei.springboot.swagger.controller.mapper" targetProject=".\src\main\java">            <!-- 针对 oracle 数据库的一个配置，是否把 schema 作为字包名 -->            <property name="enableSubPackages" value="true"/>        </javaClientGenerator>        <!--配置生成的表-->        <!--方式一：统配        警告：如果只用 % 这里是全部数据库统配，不仅是当前数据库，生成名称会自动首字母大写的驼峰命名-->        <!--<table tableName="%" domainObjectName="StudentEO"/>-->        <!--方式二：指定表，指定名称-->        <!-- table 可以有多个,每个数据库中的表都可以写一个 table，tableName表 示要匹配的数据库表,        也可以在 tableName 属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->        <table tableName="student" domainObjectName="StudentEO" enableCountByExample="false"               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"               selectByExampleQueryId="false">            <property name="my.isgen.usekeys" value="true"/>            <property name="useActualColumnNames" value="true"/>            <generatedKey column="id" sqlStatement="JDBC"/>        </table>        <table tableName="teacher" domainObjectName="TeacherEO" enableCountByExample="false"               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"               selectByExampleQueryId="false">            <property name="my.isgen.usekeys" value="true"/>            <property name="useActualColumnNames" value="true"/>            <generatedKey column="id" sqlStatement="JDBC"/>        </table>    </context></generatorConfiguration>